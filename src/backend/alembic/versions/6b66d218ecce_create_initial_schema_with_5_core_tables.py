"""Create initial schema with 5 core tables

Revision ID: 6b66d218ecce
Revises: 
Create Date: 2025-11-01 09:44:42.519363

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6b66d218ecce'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authoritative_sources',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('tier', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('config_json', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("source_type IN ('api', 'pdf', 'database', 'manual')", name='ck_source_type'),
    sa.CheckConstraint('tier IN (1, 2, 3)', name='ck_tier'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index('idx_authoritative_source_active', 'authoritative_sources', ['is_active'], unique=False)
    op.create_index('idx_authoritative_source_tier', 'authoritative_sources', ['tier'], unique=False)
    op.create_index(op.f('ix_authoritative_sources_id'), 'authoritative_sources', ['id'], unique=False)
    op.create_table('uploaded_documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=500), nullable=False),
    sa.Column('original_filename', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('processing_status', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('uploaded_by', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint("processing_status IN ('pending', 'processing', 'completed', 'failed')", name='ck_processing_status'),
    sa.ForeignKeyConstraint(['source_id'], ['authoritative_sources.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_document_created', 'uploaded_documents', ['created_at'], unique=False)
    op.create_index('idx_document_source', 'uploaded_documents', ['source_id'], unique=False)
    op.create_index('idx_document_status', 'uploaded_documents', ['processing_status'], unique=False)
    op.create_index(op.f('ix_uploaded_documents_id'), 'uploaded_documents', ['id'], unique=False)
    op.create_table('terms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.String(length=500), nullable=False),
    sa.Column('language_code', sa.String(length=10), nullable=False),
    sa.Column('definition', sa.Text(), nullable=True),
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('document_id', sa.Integer(), nullable=True),
    sa.Column('page_reference', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=1), nullable=True),
    sa.Column('part_of_speech', sa.String(length=50), nullable=True),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('preferred_term_id', sa.Integer(), nullable=True),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("gender IS NULL OR gender IN ('m', 'f', 'n')", name='ck_gender'),
    sa.CheckConstraint('confidence >= 0.0 AND confidence <= 1.0', name='ck_confidence'),
    sa.ForeignKeyConstraint(['document_id'], ['uploaded_documents.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['preferred_term_id'], ['terms.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['source_id'], ['authoritative_sources.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_term_document', 'terms', ['document_id'], unique=False)
    op.create_index('idx_term_language', 'terms', ['term', 'language_code'], unique=False)
    op.create_index('idx_term_language_code', 'terms', ['language_code'], unique=False)
    op.create_index('idx_term_source', 'terms', ['source_id'], unique=False)
    op.create_index(op.f('ix_terms_id'), 'terms', ['id'], unique=False)
    op.create_table('term_synonyms',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term_id_1', sa.Integer(), nullable=False),
    sa.Column('term_id_2', sa.Integer(), nullable=False),
    sa.Column('relationship_type', sa.String(length=50), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint("relationship_type IN ('synonym', 'broader', 'narrower', 'related')", name='ck_relationship_type'),
    sa.CheckConstraint('confidence >= 0.0 AND confidence <= 1.0', name='ck_synonym_confidence'),
    sa.CheckConstraint('term_id_1 != term_id_2', name='ck_different_terms'),
    sa.ForeignKeyConstraint(['term_id_1'], ['terms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['term_id_2'], ['terms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('term_id_1', 'term_id_2', name='uq_term_synonym_pair')
    )
    op.create_index('idx_synonym_term1', 'term_synonyms', ['term_id_1'], unique=False)
    op.create_index('idx_synonym_term2', 'term_synonyms', ['term_id_2'], unique=False)
    op.create_index(op.f('ix_term_synonyms_id'), 'term_synonyms', ['id'], unique=False)
    op.create_table('translations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('source_term_id', sa.Integer(), nullable=False),
    sa.Column('target_term_id', sa.Integer(), nullable=False),
    sa.Column('source_language', sa.String(length=10), nullable=False),
    sa.Column('target_language', sa.String(length=10), nullable=False),
    sa.Column('confidence', sa.Float(), nullable=False),
    sa.Column('validated_by_human', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('confidence >= 0.0 AND confidence <= 1.0', name='ck_translation_confidence'),
    sa.CheckConstraint('source_language != target_language', name='ck_different_languages'),
    sa.ForeignKeyConstraint(['source_term_id'], ['terms.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['target_term_id'], ['terms.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source_term_id', 'target_term_id', name='uq_translation_pair')
    )
    op.create_index('idx_translation_languages', 'translations', ['source_language', 'target_language'], unique=False)
    op.create_index('idx_translation_source', 'translations', ['source_term_id'], unique=False)
    op.create_index('idx_translation_target', 'translations', ['target_term_id'], unique=False)
    op.create_index(op.f('ix_translations_id'), 'translations', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_translations_id'), table_name='translations')
    op.drop_index('idx_translation_target', table_name='translations')
    op.drop_index('idx_translation_source', table_name='translations')
    op.drop_index('idx_translation_languages', table_name='translations')
    op.drop_table('translations')
    op.drop_index(op.f('ix_term_synonyms_id'), table_name='term_synonyms')
    op.drop_index('idx_synonym_term2', table_name='term_synonyms')
    op.drop_index('idx_synonym_term1', table_name='term_synonyms')
    op.drop_table('term_synonyms')
    op.drop_index(op.f('ix_terms_id'), table_name='terms')
    op.drop_index('idx_term_source', table_name='terms')
    op.drop_index('idx_term_language_code', table_name='terms')
    op.drop_index('idx_term_language', table_name='terms')
    op.drop_index('idx_term_document', table_name='terms')
    op.drop_table('terms')
    op.drop_index(op.f('ix_uploaded_documents_id'), table_name='uploaded_documents')
    op.drop_index('idx_document_status', table_name='uploaded_documents')
    op.drop_index('idx_document_source', table_name='uploaded_documents')
    op.drop_index('idx_document_created', table_name='uploaded_documents')
    op.drop_table('uploaded_documents')
    op.drop_index(op.f('ix_authoritative_sources_id'), table_name='authoritative_sources')
    op.drop_index('idx_authoritative_source_tier', table_name='authoritative_sources')
    op.drop_index('idx_authoritative_source_active', table_name='authoritative_sources')
    op.drop_table('authoritative_sources')
    # ### end Alembic commands ###
